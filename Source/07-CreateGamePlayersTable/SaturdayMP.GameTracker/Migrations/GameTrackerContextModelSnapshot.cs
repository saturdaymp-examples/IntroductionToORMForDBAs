// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SaturdayMP.GameTracker.Data;
using System;

namespace SaturdayMP.GameTracker.Migrations
{
    [DbContext(typeof(GameTrackerContext))]
    partial class GameTrackerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SaturdayMP.GameTracker.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("SaturdayMP.GameTracker.Models.GamePlayed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DatePlayed");

                    b.Property<int>("GameId");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GamesPlayed");
                });

            modelBuilder.Entity("SaturdayMP.GameTracker.Models.GamePlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GamePlayedId");

                    b.Property<int>("GameResultTypeId");

                    b.Property<int>("PlayerId");

                    b.HasKey("Id");

                    b.HasIndex("GamePlayedId");

                    b.HasIndex("GameResultTypeId");

                    b.HasIndex("PlayerId");

                    b.ToTable("GamePlayers");
                });

            modelBuilder.Entity("SaturdayMP.GameTracker.Models.GameResultType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("KeyCode");

                    b.Property<string>("Type")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("GameResultTypes");
                });

            modelBuilder.Entity("SaturdayMP.GameTracker.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("SaturdayMP.GameTracker.Models.GamePlayed", b =>
                {
                    b.HasOne("SaturdayMP.GameTracker.Models.Game", "Game")
                        .WithMany("GamesPlayed")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SaturdayMP.GameTracker.Models.GamePlayer", b =>
                {
                    b.HasOne("SaturdayMP.GameTracker.Models.GamePlayed", "GamePlayed")
                        .WithMany("GamePlayers")
                        .HasForeignKey("GamePlayedId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SaturdayMP.GameTracker.Models.GameResultType", "GameResultType")
                        .WithMany()
                        .HasForeignKey("GameResultTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SaturdayMP.GameTracker.Models.Player", "Player")
                        .WithMany("GamesPlayers")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
